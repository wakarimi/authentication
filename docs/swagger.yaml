basePath: /api
definitions:
  handlers.LoginRequest:
    properties:
      password:
        description: |-
          Password of the account to be login.
          Required: true
          Example: qwerty01
        maxLength: 50
        minLength: 8
        type: string
      username:
        description: |-
          Username of the account to be login.
          Required: true
          Example: Zalimannard
        maxLength: 30
        minLength: 3
        type: string
    required:
    - password
    - username
    type: object
  handlers.LoginResponse:
    properties:
      accessToken:
        description: |-
          AccessToken used to authenticate subsequent requests.
          Required: true
          Example: aaaaa.bbbbb.ccccc
        type: string
      refreshToken:
        description: |-
          RefreshToken used to renew the access token.
          Required: true
          Example: aaaaa.bbbbb.ccccc
        type: string
    required:
    - accessToken
    - refreshToken
    type: object
  handlers.RegisterAccountRequest:
    properties:
      password:
        description: |-
          Password of the account to be registered.
          Required: true
          Example: qwerty01
        maxLength: 50
        minLength: 8
        type: string
      username:
        description: |-
          Username of the account to be registered.
          Required: true
          Example: Zalimannard
        maxLength: 30
        minLength: 3
        type: string
    required:
    - password
    - username
    type: object
  types.Error:
    properties:
      error:
        description: |-
          The error message.
          Example: User already exists
        type: string
    required:
    - error
    type: object
host: localhost:8020
info:
  contact:
    email: zalimannard@mail.ru
    name: Zalimannard
  description: This is the authentication service for Wakarimi.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Wakarimi Authentication API
  version: "0.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login into account with the input payload.
      parameters:
      - description: Login payload
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Ok.
          schema:
            $ref: '#/definitions/handlers.LoginResponse'
        "400":
          description: Error.
          schema:
            $ref: '#/definitions/types.Error'
        "401":
          description: Error.
          schema:
            $ref: '#/definitions/types.Error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/types.Error'
      summary: Login into account
  /register:
    post:
      consumes:
      - application/json
      description: Register a new account with the input payload. The first registered
        account will automatically be assigned the ADMIN role.
      parameters:
      - description: Register payload
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterAccountRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Ok.
        "400":
          description: Error.
          schema:
            $ref: '#/definitions/types.Error'
        "500":
          description: Error.
          schema:
            $ref: '#/definitions/types.Error'
      summary: Register a new account
swagger: "2.0"
